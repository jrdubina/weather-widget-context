{"version":3,"sources":["context/Context.js","services/axiosService.js","context/ContextWeather.js","components/Header.js","components/Temperatures.js","components/Zip.js","App.js","index.js"],"names":["WeatherContext","createContext","ZipContext","getWeather","zip","a","requestObject","method","url","axios","ContextWeather","children","useState","zipCode","setZipCode","weatherData","setWeatherData","useEffect","then","response","data","weather","Provider","value","Header","useContext","weatherDetails","undefined","Row","className","Col","xs","name","src","icon","id","description","Temperatures","formatTemp","temp","Math","round","main","temp_min","temp_max","Zip","zipForm","useRef","handleUpdatekEvent","form","current","ref","type","label","defaultValue","onKeyDown","e","key","preventDefault","onClick","App","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8398ec47.chunk.js","sourcesContent":["import { createContext } from 'react';\nexport const WeatherContext = createContext({});\nexport const ZipContext = createContext('');","import axios from 'axios';\n\nexport async function getWeather(zip) {\n    const requestObject = {\n        method: 'GET',\n        url: `https://api.openweathermap.org/data/2.5/weather?zip=${zip},us&appid=709847967f5e54b97308c1b2cae4dee5&units=imperial`\n    };\n\n    return await axios(requestObject);\n};","import { useState, useEffect } from 'react';\nimport { WeatherContext, ZipContext } from './Context';\nimport { getWeather } from '../services/axiosService';\n\nexport const ContextWeather = ({children}) => {\n    const [ zipCode, setZipCode ] = useState('10036');\n    const [ weatherData, setWeatherData ] = useState({});\n  \n    useEffect(async () =>{\n        const weather = await getWeather(zipCode).then(response => {return (response.data)});\n\n        setWeatherData(weather);\n      },[zipCode]);\n\n      return(\n    <WeatherContext.Provider value={[ weatherData, setWeatherData ]}>\n        <ZipContext.Provider value={[ zipCode, setZipCode]}>\n           {children}\n        </ZipContext.Provider>\n    </WeatherContext.Provider>\n   );\n};","import { useContext } from 'react';\nimport { WeatherContext } from '../context/Context';\nimport { Row, Col } from 'react-bootstrap';\nimport './styles/Header.scss';\n\nexport default function Header() {\n    const [ weatherData ] = useContext(WeatherContext);\n    const weatherDetails = weatherData?.weather ? weatherData?.weather[0] : undefined;\n\n    return (\n        <>\n            <Row className='justify-content-center'>\n                <Col xs='auto' className='no-padding'>\n                    <h1>{weatherData?.name}</h1>\n                </Col>\n                <Col xs='auto' className='no-padding'>\n                    <img src={`http://openweathermap.org/img/wn/${weatherDetails?.icon}.png`} />\n                </Col>\n            </Row>\n            <Row className='justify-content-center'>\n                <p id='weatherDescription'>{weatherDetails?.description}</p>\n            </Row>\n        </>\n    );\n};","import { useContext } from 'react';\nimport { WeatherContext } from '../context/Context';\nimport { Row, Col } from 'react-bootstrap';\nimport './styles/Temperatures.scss';\n\nexport default function Temperatures() {\n    const [ weatherData ] = useContext(WeatherContext);\n\n    const formatTemp = (temp) => {\n        return `${Math.round(temp)}\\u00b0`;\n    }\n\n    return (\n        <>\n            <Row className='justify-content-center'>\n                <p id='temp'>{formatTemp(weatherData?.main?.temp)}</p>\n            </Row>\n            <Row className='justify-content-center'>\n                <p className='highLowTemps'>{formatTemp(weatherData?.main?.temp_min)}</p>\n                <p className='highLowTemps'>{formatTemp(weatherData?.main?.temp_max)}</p>\n            </Row>\n        </>\n    );\n};","import { useContext, useRef } from 'react';\nimport { ZipContext } from '../context/Context';\nimport { Row, Col } from 'react-bootstrap';\nimport './styles/Zip.scss';\n\nexport default function Zip() {\n    const [ zipCode, setZipCode ] = useContext(ZipContext);\n\n    const zipForm = useRef(null);\n\n    const handleUpdatekEvent = () => {\n        const form = zipForm.current;\n        setZipCode(`${form['zip'].value}`)\n     };\n\n     const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            handleUpdatekEvent();\n        };\n      };\n\n    return (\n        <>\n            <Row className='justify-content-center'>\n                <Col xs='auto' className='zipDiv'>\n                    <p id='zipCodeLabel'>Zip Code:</p>\n                </Col>\n            </Row>\n            <Row className='justify-content-center'>\n                <Col xs='auto' className='no-padding'>\n                    <form ref={zipForm}>\n                        <input type='text' label={'zip'} name={'zip'} id='zipCodeInput' defaultValue={zipCode} onKeyDown={handleKeyDown} />\n                    </form>\n                </Col>\n                <Col xs='auto'>\n                    <button type='button' id='zipCodeButton' onClick={() => {handleUpdatekEvent()}}>Update</button>\n                </Col>\n            </Row>\n        </>\n    );\n};","import { ContextWeather } from './context/ContextWeather';\nimport Header from './components/Header';\nimport Temperatures from './components/Temperatures';\nimport Zip from './components/Zip';\nimport { Container } from 'react-bootstrap'\nimport './App.scss';\n\n\nfunction App() {\n  return (\n    <ContextWeather>\n      <Container>\n        <Header />\n        <Temperatures />\n        <hr />\n        <Zip />\n        </Container>\n    </ContextWeather>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}